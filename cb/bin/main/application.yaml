spring:
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
  servlet:
    multipart:
      enabled: true
      # 다시 설정하고 주석 지우기
      location: /Users/typing/Desktop/VSC_workspace/spring/gitlab/spring-security-with-jwt/src/main/resources/files/temp/
      max-file-size: 1024MB
      max-request-size: 2048MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/collaboration_board?serverTimezone=Asia/Seoul
    username: root
    password: qwerty
    ###
#   security:
#     oauth2:
#       client:
#         registration:
#           google:
#             client-id: 959827062348-r8otcrif3f1ju06amv7m10dolfi75ojk.apps.googleusercontent.com
#             client-secret: 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
#             scope:
#               - email
#               - profile
#           facebook:
#             client-id: 495878002389555
#             client-secret: 94e8ec21d7657d8426ba95ba3c516ea0
#             scope:
#               - email
#               - public_profile
#           naver:
#             client-id: Ob6PoBiP6JclMUQUE6Rm
#             client-secret: BddoHMku8S
#             scope:
#               - name
#               - email
#               # - profile_image
#             client-name: naver
#             authorization-grant-type: authorization_code
#             redirect-uri: http://localhost:8080/login/oauth2/code/naver # 네이버는 따로 적어줘야 함

#         provider:
#           naver:
#             authorization-uri: https://nid.naver.com/oauth2.0/authorize
#             token-uri: https://nid.naver.com/oauth2.0/token
#             user-info-uri: https://openapi.naver.com/v1/nid/me
#             user-name-attribute: response #회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌.

server:
  port: 8080
  servlet:
    encoding:
      force-response: true
# jwt:
#   token:
#     secret: awecfawejfncaweihcnwie
